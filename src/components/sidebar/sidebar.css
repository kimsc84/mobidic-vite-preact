/* 사이드바 스타일 시작 */
/* 1depth 메뉴 스타일 시작 */
nav.sidebar__nav {
  display: flex;
  gap: 1rem;
  align-items: center;
  justify-content: space-between;
  flex-direction: column; /* 내부 아이템 세로 정렬 */

  overflow: visible; /* ✨ 수정: 하위 오버레이 메뉴가 보일 수 있도록 변경 */

  position: fixed; /* 화면에 고정 (스크롤과 무관하게) */
  top: 5rem; /* 헤더 높이만큼 아래에 위치 */
  z-index: 990; /* 다른 요소들보다 위에 표시 (단위 없음) */
  width: 5.25rem; /* 1뎁스 사이드바 너비 */
  height: calc(100vh - 5rem); /* 헤더 제외한 전체 화면 높이 */
  background-color: var(--color-primary-600); 
  color: var(--color-white);
}

nav.sidebar__nav ul.sidebar__content-menu {
  display: flex;
  flex-direction: column;
} /* 메뉴 아이템들 세로로 쌓기 */

nav.sidebar__nav ul.sidebar__content-menu li.sidebar__menu-item {
  display: flex;
  position: relative; /* 토글 버튼 위치 기준 */
  align-items: center;
  justify-content: center;
  padding: 0.625rem; /* 10px / 16px */
  height: 4.25rem;
  text-align: center;
  flex-direction: column; /* 아이콘 위, 텍스트 아래 (기본값) 또는 row로 변경 가능 */
  gap: 0.25rem; /* 아이콘과 텍스트 사이 간격 */
  word-break: keep-all;
  font: var(--text-label-large);

  &:hover { 
    background-color: var(--color-tertiary-600);
    color: var(--color-primary-600);
    cursor: pointer;
  }
}

/* 1뎁스 메뉴 래치 인디케이터 */
nav.sidebar__nav ul.sidebar__content-menu li.sidebar__menu-item .sidebar__menu-latch-indicator {
  display: none; /* 평소에는 숨김 */
  position: absolute; /* 부모 li 기준 절대 위치 */
  top: 15%; /* % 유지 */
  right: 0.375rem; 
  transform: translateY(-50%);
  width: 0.375rem; 
  height: 0.375rem;  
  background-color: var(--color-tertiary-600);
  border-radius: 999rem; 
}
/* 1뎁스 메뉴: 외부 클릭으로 서랍이 닫혔을 때 '래치된' 상태 스타일  */
nav.sidebar__nav ul.sidebar__content-menu li.sidebar__menu-item--latched {
  
  &.is-active {
    background-color: var(--color-primary-800); 
    color: var(--color-gray-200); 
    font-weight: bold;
    cursor: pointer;
  }
  &:hover {
    background-color:  var(--color-primary-900);
    color: var(--color-tertiary-600);
  }
}
/* 래치된 상태일 때 인디케이터 표시 */
nav.sidebar__nav ul.sidebar__content-menu li.sidebar__menu-item--latched .sidebar__menu-latch-indicator {
  display: block;
}


/* === 퀵메뉴 스타일 시작 === */

nav.sidebar__nav div.sidebar__quick-menu {
  display: flex;
  /* position: relative; */ /* 이전 시도 원복 */
  /* z-index: 1; */ /* 이전 시도 원복 */
  align-items: center;
  justify-content: end;
  flex-direction: column; /* 퀵메뉴 아이템들 세로 정렬 (아래쪽으로) */
  padding: 0rem 0.5rem 0.5rem 0.5rem; /* 0px 8px 8px 8px */
  width: 100%; 
  height: 13rem;
  box-sizing: border-box; /* ✨ 수정: padding을 height 계산에 포함시켜 실제 높이를 13rem으로 고정 */
  /* outline: 2px solid red !important; */ /* ✨ 디버깅: .sidebar__quick-menu 경계 확인용 */
  z-index: 1;
}

nav.sidebar__nav ul.sidebar__quick-menu-list {
  display: flex;
  gap: 1.5rem;
  align-items: center;
  justify-content: center;
  flex-direction: column; /* 퀵메뉴 아이콘들 세로 정렬 */
  padding: 1rem 0rem;
  width: 4.25rem;
  color: var(--color-white); /* 퀵메뉴 아이콘 기본 색상 (흰색) */
  background-color: var(--color-primary-950);
  border-radius: 0.5rem;
}

 ul.sidebar__quick-menu-list > li {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem; /* 8px / 16px */
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 0.25rem;

  & > a {
    color: var(--color-white); /* 퀵메뉴 아이콘 기본 색상 */
  }
  
  &:hover { /* 퀵메뉴 아이템 호버 시 */
    background-color: var(--color-tertiary-600); /* 호버 시 배경색 변경 */
    cursor: pointer;

    & > a {
      color: var(--color-primary-600); /* 호버 시 아이콘 색상 변경 (1뎁스 메뉴 호버와 통일성 및 가시성 고려) */
    }
  }
}

.sidebar__quick-menu-item {
  position: relative; /* 하위 메뉴(.sidebar__quick-submenu)의 위치 기준으로 사용 */
}

/* 퀵메뉴 아이템의 링크 스타일 */
.sidebar__quick-menu-link {
  display: flex; /* 아이콘과 화살표 정렬 */
  align-items: center;
  justify-content: center; /* 기본적으로 아이콘 중앙 정렬 */
  padding: 0rem; /* 0px */
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  text-decoration: none;  
  outline: none; /* ✨ 수정: 포커스 시 브라우저 기본 테두리 제거 (위치 변경 방지용). 접근성을 위해 커스텀 포커스 스타일 권장. */
  color: var(--color-white); 
  border-radius: var(--sidebar-quick-menu-item-border-radius, 4px); 
  transition: background-color 0.2s ease-in-out;
}

/* 하위 메뉴 오버레이 컨테이너 */
.sidebar__quick-submenu {
  /* display: none; */ /* ✨ 수정: display 대신 visibility와 opacity로 제어 */
  visibility: hidden; /* ✨ 추가: 초기에는 보이지 않음 (JS 높이 계산에 영향 주지 않음) */
  opacity: 0; /* ✨ 추가: 초기에는 투명 */
  transition: opacity 0.2s ease-in-out, visibility 0s linear 0.2s; /* ✨ 추가: 사라질 때 0.2초 딜레이 후 visibility 변경 */
  position: fixed;
  top: calc(100vh - 13rem); /* ✨ 복원: .sidebar__quick-menu 컨테이너의 상단 위치와 동일하게 설정 */
  left: 5.25rem; /* ✨ 복원: 1뎁스 사이드바 너비만큼 오른쪽 (고정) */
  height: 12.5rem; /* 변경: 목표 높이 12.5rem */
  width: 12.5rem; 
  background-color: rgba(25, 35, 50, 0.96); /* ✨ 간지 UP: 딥 다크 블루-차콜 배경 (투명도 포함) */
  border-radius: 0.5rem; /* ✨ 간지 UP: 더 부드러운 모서리 (0.375rem -> 0.5rem) */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15), 0 10px 20px rgba(0, 0, 0, 0.15), 0 15px 30px rgba(0, 0, 0, 0.15); /* ✨ 간지 UP: 섬세하고 깊이 있는 다층 그림자 */
  z-index: 1060; /* 다른 요소들보다 위에 표시 (단위 없음), 퀵메뉴 아이템의 ::after(1059) 보다 높게 */
  padding: 0.75rem; /* ✨ 간지 UP: 좀 더 여유로운 내부 패딩 (0.5rem -> 0.75rem) */
  
  overflow-y: auto; /* 13rem 내부에서 내용이 넘칠 경우 스크롤 (기존 max-height 대신 고정 높이 사용) */
  /* border: 3px dashed orange !important; ✨ 디버깅: submenu 자체가 보이는지 확인용 테두리 */

  /* 웹킷 브라우저 스크롤바 스타일링 (선택 사항) */
  &::-webkit-scrollbar {
    width: 6px; /* 스크롤바 너비 */
  }
  &::-webkit-scrollbar-track {
    background: transparent; /* 스크롤바 트랙 배경 투명 */
  }
  &::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.3); /* 스크롤바 색상 (반투명 흰색) */
    border-radius: 3px; /* 스크롤바 둥글게 */
    /* border: 1px solid rgba(0, 0, 0, 0.1); */ /* 스크롤바 테두리 (선택) */
  }
}

/* 하위 메뉴 말풍선 꼬리 */
.sidebar__quick-submenu::before {
  content: "";
  position: absolute; /* ✨ 수정: 부모(.sidebar__quick-submenu) 기준 절대 위치로 변경 */
  /* top: 0.75rem; */ /* 기존 고정값 */
  top: var(--tail-top, 0.75rem); /* JS에서 동적으로 설정, JS 미적용 시 기본값 0.75rem (퀵메뉴 아이템 중앙 부근) */
  /* 꼬리의 좌우 위치:
     border-right-width (꼬리의 뾰족한 부분 길이) 만큼 왼쪽으로 이동시켜,
     꼬리의 오른쪽 밑변이 서브메뉴의 왼쪽 가장자리에 붙도록 함.
     현재 border-width가 0.5rem이므로, left도 -0.5rem. */
  left: -1.0rem; /* ✨ 수정: 꼬리 밑변이 서브메뉴 패딩 시작점에 오고, 뾰족한 부분이 0.5rem 밖으로 돌출되도록 조정 */

  width: 0; 
  height: 0;
  border-style: solid !important; /* 모든 면에 solid 스타일 강제 */
  border-width: 0.5rem !important; /* 모든 면에 두께 0.5rem 강제! */

  /* 이제 각 면의 색상만 지정 (투명 또는 빨강) */
  border-top-color: transparent !important;
  border-bottom-color: transparent !important;
  border-left-color: transparent !important; /* ✨ 수정: "왼쪽"으로 뾰족하므로 왼쪽 면은 투명. */
  border-right-color: rgba(25, 35, 50, 0.96) !important; /* ✨ 간지 UP: 꼬리 색상도 새 배경색과 일치 */
  z-index: 1061 !important; /* 하위 메뉴(1060)보다 확실히 위에, ::after(1059)보다도 위에 */
}

/* 부모 퀵메뉴 아이템에 호버 시 하위 메뉴 표시 */
/* 또는 하위 메뉴 자체에 호버/포커스 시에도 표시 유지 */
.sidebar__quick-menu-item.has-submenu:hover > .sidebar__quick-submenu,
.sidebar__quick-menu-item.has-submenu:focus-within > .sidebar__quick-submenu, /* 키보드 포커스 시에도 하위 메뉴 표시 */
.sidebar__quick-submenu:hover { /* 하위 메뉴 자체에 마우스 올렸을 때도 유지 */
  /* display: block; */ /* ✨ 수정: display는 항상 block(div 기본값) 유지 */
  visibility: visible; /* ✨ 복원: 하위 메뉴가 보이도록 설정 */
  opacity: 1; /* ✨ 수정: 호버 시 완전 불투명하게 변경 (0.85 -> 1) */
  transition: opacity 0.2s ease-in-out, visibility 0s linear 0s; /* ✨ 추가: 나타날 때는 딜레이 없이 즉시 visibility 변경 */
}
  
.sidebar__quick-submenu-list {
  display: flex;
  flex-direction: column; /* 하위 메뉴 아이템 세로 정렬 */
  gap: 0.5rem;
  list-style: none;
  padding: 0;
  margin: 0;
}

.sidebar__quick-submenu-list li a {
  display: flex; /* 아이콘과 텍스트 정렬 */
  align-items: flex-start;
  border-radius: 0.25rem; /* ✨ 간지 UP: 아이템 자체에도 살짝 둥근 모서리 */
  width: 100%;
  padding: 0.6rem 1.2rem; /* ✨ 간지 UP: 아이템 내부 패딩도 살짝 여유롭게 */
  text-decoration: none;
  color: var(--color-gray-200); /* ✨ 간지 UP: 어두운 배경에 밝은 텍스트 (기존 #ecf0f1 -> gray-200) */
  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; /* ✨ box-shadow 트랜지션 추가 */
}

.sidebar__quick-submenu-list li a:hover { /* 하위 메뉴 아이템 호버 시 */
  background-color: rgba(40, 50, 65, 0.92); /* ✨ 간지 UP: 호버 시 살짝 다른 톤의 다크 배경 */
  color: var(--color-white); /* ✨ 간지 UP: 호버 시 텍스트는 완전 흰색으로 */
  transform: translateX(5px) scale(1.02); /* ✨ 간지 UP: 좀 더 다이나믹한 이동 및 확대 효과 */
  box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* ✨ 간지 UP: 호버된 아이템 자체에 은은한 그림자 */
}

/* 하위 메뉴 아이템 내부 아이콘 (선택적) */
.sidebar__quick-submenu-item-icon {
  margin-right: 0.625rem; /* 10px / 16px */
  width: 1rem; /* 16px / 16px */
  height: 1rem; /* 16px / 16px */
  fill: currentColor;
}

/* === 퀵메뉴 스타일 끝 === */



/* 1depth 메뉴 스타일 끝 */

/* 2뎁스 및 하위 뎁스 메뉴 공통 스타일 시작 */
div.sidebar__drawer ul.sidebar__menu {
  display: flex;
  gap: 0.25rem;
  flex-direction: column; /* 2뎁스 이상 메뉴 아이템 세로 정렬 */
}

li.sidebar__item {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  padding: 0.25rem 0.5rem; /* 4px 8px */
  border-radius: 0.25rem;
  font: var(--text-label-large);
  color: var(--color-text-default);

  /* 기본 아이콘 스타일 (<a> 태그 내부의 .sidebar__item-icon 에 적용) */
  & > a > .sidebar__item-icon { /* ✨ 수정: 아이콘 선택자 경로 수정 (li > a > svg) */
    width: 0.875rem;
    aspect-ratio: 1;
    /* fill: currentColor; /* 기본적으로 링크의 색상을 따름 (아래 hover/active에서 구체적으로 지정) */
  }

  &:hover, /* 마우스 올렸을 때 */
  &:active,
  &.sidebar__item--current-page, /* 현재 페이지 링크 활성 스타일 */
  &.sidebar__item--ancestor-folder { /* 현재 페이지의 상위 폴더 활성 스타일 */
    background-color: var(--color-primary-200); /* 연한 파란색 배경 */
    cursor: pointer;
    /* 
      ✨ 노트: 기존 svg.folder, svg.folder--hover 관련 display 토글 CSS는
      sidebar.js의 createSubMenuItemElement 함수가 단일 아이콘만 생성하므로
      실제 동작하지 않았음. 아이콘 변경은 fill 색상 변경으로 처리됨.
      만약 아이콘 모양 자체를 변경하려면 JS에서 아이콘 SVG를 교체하거나 <use>의 href를 변경해야 함.
    */
  }
  /* 현재 페이지 또는 상위 폴더 활성 시 텍스트/아이콘 색상 변경 */
  &.sidebar__item--current-page > a,
  &.sidebar__item--ancestor-folder > a {
    color: var(--color-primary-700); /* 진한 파란색 텍스트 */
    font-weight: var(--font-weight-semibold);
  }

  &.sidebar__item--current-page .sidebar__item-icon,
  &.sidebar__item--ancestor-folder .sidebar__item-icon {
    fill: var(--color-primary-700); /* 진한 파란색 아이콘 */
  }
}

/* 2뎁스 드로워 스타일 */
div.sidebar__drawer {
  display: flex; 
  flex-direction: column;
  padding: 0.875rem 0.5rem; /* 14px 8px */
  border-right: 1px solid var(--color-gray-300); /* 오른쪽 테두리 */
  border-top: 1px solid var(--color-gray-300); /* 상단 테두리 (헤더와 구분) */
  border-bottom: 1px solid var(--color-gray-300); /* 하단 테두리 */
  position: fixed; /* 화면에 고정 */
  top: 5rem; /* 헤더 높이만큼 아래에서 시작 */
  left: 5.25rem; /* 1뎁스 사이드바 너비만큼 오른쪽에서 시작 */
  width: 12.5rem; /* 200px / 16px */
  height: calc(100vh - 5rem); /* 헤더 높이를 제외한 전체 화면 높이 */
  background-color: var(--color-white);
  z-index: 980; /* 1뎁스(990)보다 낮고, 3뎁스 호스트(970)보다 높게 */
  visibility: hidden; /* 초기 상태: 숨김 */
  opacity: 0; /* 초기 상태: 투명 */
  transform: translateX(-100%); /* 왼쪽 바깥으로 숨김 */
  transition: visibility 0s linear 0.25s, opacity 0.25s ease-in-out, transform 0.25s ease-in-out; /* 나타나는 애니메이션 */
  overflow-y: auto; /* 내용 많을 시 스크롤 */
}

/* 2뎁스 드로워 열릴 때 (다른 하위 드로워 클래스가 없을 때만 적용) */
/* ✨ 수정: 2뎁스 드로워는 sidebar.html에 직접 정의되어 있고, JS에서 is-open 클래스만 토글함.
   따라서 .is-open 시 visibility, opacity, transform을 직접 변경해줘야 함. */
div.sidebar__drawer.is-open {
  visibility: visible;
  opacity: 1;
  transform: translateX(0); /* 제자리로 이동 */
  transition-delay: 0s; /* 열릴 때 지연 없음 */
}

/* --- 3뎁스 드로워 스타일 --- */
.sidebar__sub-drawer-host { /* 3뎁스 드로워를 담는 컨테이너 */
  position: fixed;
  top: 5rem;
  left: calc(5.25rem + 12.5rem); /* 1뎁스 너비 + 2뎁스 너비 */
  width: 12.5rem; /* 200px / 16px */
  height: calc(100vh - 5rem);
  z-index: 970; /* 2뎁스(980)보다 낮고, 4뎁스 호스트(960)보다 높게 */
  border-left: none;
}

#sub-drawer-host > .sidebar__drawer--sub {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-left: none;
  border-right: 1px solid var(--color-gray-300);
  border-top: 1px solid var(--color-gray-300);
  border-bottom: 1px solid var(--color-gray-300);
  z-index: auto; /* 부모 호스트의 z-index 상속 */
  /* ✨ 추가: 4뎁스, 5뎁스와 동일하게 초기 숨김 상태 및 트랜지션 설정 */
  background-color: var(--color-white); /* 배경색 명시 (다른 뎁스와 통일) */
  padding: 0.875rem 0.5rem; /* 패딩 명시 (다른 뎁스와 통일) */
  visibility: hidden;
  opacity: 0;
  transform: translateX(-100%);
  transition: visibility 0s linear 0.25s, opacity 0.25s ease-in-out, transform 0.25s ease-in-out;
  overflow-y: auto; /* 내용 많을 시 스크롤 */
}

/* 3뎁스 드로워 열릴 때 */
#sub-drawer-host > .sidebar__drawer--sub.is-open {
  visibility: visible;
  opacity: 1;
  transform: translateX(0);
  transition-delay: 0.05s; /* 다른 뎁스와 일관된 딜레이 (선택 사항) */
}
/* --- 3뎁스 드로워 스타일 끝 --- */

/* --- 4뎁스 드로워 스타일 --- */
.sidebar__sub-sub-drawer-host { /* 4뎁스 드로워를 담는 컨테이너 */
  position: fixed;
  top: 5rem;
  left: calc(5.25rem + 12.5rem + 12.5rem); /* 1뎁스 + 2뎁스 + 3뎁스 너비 */
  width: 12.5rem; /* 200px / 16px */
  height: calc(100vh - 5rem);
  z-index: 960; /* 3뎁스 호스트(970)보다 낮고, 5뎁스 호스트(950)보다 높게 */
}

#sub-sub-drawer-host > .sidebar__drawer--sub-sub {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--color-white); 
  padding: 0.875rem 0.5rem; /* 14px 8px */
  border-right: 1px solid var(--color-gray-300);
  border-top: 1px solid var(--color-gray-300);
  border-bottom: 1px solid var(--color-gray-300);
  z-index: auto; /* 부모 호스트의 z-index 상속 */
  visibility: hidden;
  opacity: 0;
  transform: translateX(-100%);
  transition: visibility 0s linear 0.25s, opacity 0.25s ease-in-out, transform 0.25s ease-in-out;
  overflow-y: auto;
}
/* 4뎁스 드로워 열릴 때 */
#sub-sub-drawer-host > .sidebar__drawer--sub-sub.is-open {
  visibility: visible;
  opacity: 1;
  transform: translateX(0);
  transition-delay: 0.1s;
}
/* --- 4뎁스 드로워 스타일 끝 --- */

/* --- 5뎁스 드로워 스타일 --- */
.sidebar__sub-sub-sub-drawer-host { /* 5뎁스 드로워를 담는 컨테이너 */
  position: fixed;
  top: 5rem;
  left: calc(5.25rem + 12.5rem + 12.5rem + 12.5rem); /* 1~4뎁스 너비 합 */
  width: 12.5rem; /* 200px / 16px */
  height: calc(100vh - 5rem);
  z-index: 950; /* 4뎁스 호스트(960)보다 낮게 */
}

#sub-sub-sub-drawer-host > .sidebar__drawer--sub-sub-sub {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; 
  height: 100%;  
  background-color: var(--color-white); 
  padding: 0.875rem 0.5rem; /* 14px 8px */
  border-right: 1px solid var(--color-gray-300);
  border-top: 1px solid var(--color-gray-300);
  border-bottom: 1px solid var(--color-gray-300);
  z-index: auto; /* 부모 호스트의 z-index 상속 */
  visibility: hidden;
  opacity: 0;
  transform: translateX(-100%);
  transition: visibility 0s linear 0.25s, opacity 0.25s ease-in-out, transform 0.25s ease-in-out;
  overflow-y: auto;
}
/* 5뎁스 드로워 열릴 때 */
#sub-sub-sub-drawer-host > .sidebar__drawer--sub-sub-sub.is-open {
  visibility: visible;
  opacity: 1;
  transform: translateX(0);
  transition-delay: 0.15s;
}
/* --- 5뎁스 드로워 스타일 끝 --- */

/* 드로어 내부 메뉴 아이템 링크 (a) */
.sidebar__drawer .sidebar__item a {
  display: flex;
  align-items: center;
  text-decoration: none;
  color: inherit; /* 부모 li(.sidebar__item)의 글자색 상속 */
  width: 100%; /* 클릭 영역 확장 */
}

/* 드로어 내부 메뉴 아이콘 (svg.sidebar__item-icon) */
.sidebar__drawer .sidebar__item .sidebar__item-icon {
  margin-right: 0.5rem;
  fill: currentColor; /* 현재 텍스트 색상과 동일하게 아이콘 색상 적용 */
  flex-shrink: 0;
}

/* 드로어 내부 메뉴 텍스트 (span) - 길어질 경우 말줄임 처리 */
.sidebar__drawer .sidebar__item span {
  display: -webkit-box;
  -webkit-line-clamp: 1; 
  -webkit-box-orient: vertical; /* 텍스트 한 줄 초과 시 말줄임 처리 */
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-all;
}

/* 사용되지 않을 수 있는 3뎁스 메뉴 스타일 (참고용) */
.sidebar__drawer .sidebar__submenu {
  list-style: none;
  padding-left: 1rem;
  margin: 0.25rem 0 0 0; /* 상단 여백 */
  display: none;
}

.sidebar__drawer .sidebar__item--open > .sidebar__submenu { /* 부모 아이템이 열렸을 때 하위 메뉴 표시 */
  display: block;
}
/* 2뎁스 및 하위 뎁스 메뉴 공통 스타일 끝 */
/* 사이드바 스타일 끝 */